version: '3'
services:
  redis-ui:
    image: patrikx3/p3x-redis-ui:latest
    ports:
      - 7843:7843
    volumes:
      - ./setup/p3x-redis-ui-settings:/settings
    networks:
      - acapy_default

  redis-cluster:
    image: redis:latest
    container_name: cluster
    command: redis-cli --cluster create 172.28.0.101:6377 172.28.0.102:6378 172.28.0.103:6379 172.28.0.104:6380 172.28.0.105:6381 172.28.0.106:6382 --cluster-replicas 1 --cluster-yes
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    networks:
      acapy_default:
        ipv4_address: 172.28.0.107
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
      - redis-ui

  redis-node-1:
    image: redis:latest
    container_name: node1
    command: [ "redis-server", "/conf/redis.conf", "--port 6377" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6377:6377
    volumes:
      - ./redis.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.101

  redis-node-2:
    image: redis:latest
    container_name: node2
    command: [ "redis-server", "/conf/redis.conf", "--port 6378" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6378:6378
    volumes:
      - ./redis.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.102

  redis-node-3:
    image: redis:latest
    container_name: node3
    command: [ "redis-server", "/conf/redis.conf", "--port 6379" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - ./redis.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.103

  redis-node-4:
    image: redis:latest
    container_name: node4
    command: [ "redis-server", "/conf/redis.conf", "--port 6380" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6380:6380
    volumes:
      - ./redis.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.104

  redis-node-5:
    image: redis:latest
    container_name: node5
    command: [ "redis-server", "/conf/redis.conf", "--port 6381" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6381:6381
    volumes:
      - ./redis.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.105

  redis-node-6:
    image: redis:latest
    container_name: node6
    command: [ "redis-server", "/conf/redis.conf", "--port 6382" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6382:6382
    volumes:
      - ./redis.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.106

  #*************************************************************
  # agency: Edison Agency.
  #*************************************************************
  agency:
    image: acapy-redis-queue
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - 3001:3001
    depends_on:
      - redis-cluster
    volumes:
      - ./configs:/home/indy/configs:z
    environment:
      - WAIT_BEFORE_HOSTS=15
      - WAIT_HOSTS=redis-node-3:6379
      - WAIT_HOSTS_TIMEOUT=120
      - WAIT_SLEEP_INTERVAL=1
      - WAIT_HOST_CONNECT_TIMEOUT=60
    networks:
      - acapy_default
    command: start --arg-file ./configs/agency.yml

  #*************************************************************
  # mediator: Edison Mediator.
  #*************************************************************
  mediator-tunnel:
    image: dbluhm/agent-tunnel
    command: -s mediator:3000 -p 4040 -h ${AGENT_TUNNEL_HOST}
    ports:
      - 4040:4040
    networks:
      - acapy_default

  mediator:
    image: acapy-redis-queue
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - 3002:3001
    depends_on:
      - deliverer
    volumes:
      - ./configs:/home/indy/configs:z
      - ./acapy-endpoint.sh:/home/indy/acapy-endpoint.sh:z
    environment:
      - WAIT_BEFORE_HOSTS=15
      - WAIT_HOSTS=redis-node-3:6379
      - WAIT_HOSTS_TIMEOUT=120
      - WAIT_SLEEP_INTERVAL=1
      - WAIT_HOST_CONNECT_TIMEOUT=60
      - TUNNEL_ENDPOINT=http://mediator-tunnel:4040
      - ACAPY_ENDPOINT=${ACAPY_ENDPOINT}
    networks:
      - acapy_default
    entrypoint: /bin/sh -c '/wait && ./acapy-endpoint.sh poetry run aca-py "$$@"' --
    command: start --arg-file ./configs/mediator.yml

  deliverer:
    image: redis-deliverer
    build:
      context: ..
      dockerfile: redis_deliverer/Dockerfile
    depends_on:
      - redis-cluster
    ports:
      - 7002:7002
    environment:
      - REDIS_SERVER_URL=redis://default:test1234@172.28.0.103:6379
      - TOPIC_PREFIX=acapy
      - STATUS_ENDPOINT_HOST=0.0.0.0
      - STATUS_ENDPOINT_PORT=7002
      - STATUS_ENDPOINT_API_KEY=test_api_key_2
      - WAIT_BEFORE_HOSTS=15
      - WAIT_HOSTS=redis-node-3:6379
      - WAIT_HOSTS_TIMEOUT=120
      - WAIT_SLEEP_INTERVAL=1
      - WAIT_HOST_CONNECT_TIMEOUT=60
    networks:
      - acapy_default

  #*************************************************************
  # setup: Setup connections between agency and mediator. In a *
  # "Juggernaut" fashion!                                      *
  #*************************************************************
  setup:
    container_name: juggernaut
    build:
      context: ./setup
      dockerfile: Dockerfile
    environment:
      - WAIT_BEFORE_HOSTS=15
      - WAIT_HOSTS=agency:3001,mediator:3001
      - WAIT_HOSTS_TIMEOUT=120
      - WAIT_SLEEP_INTERVAL=1
      - WAIT_HOST_CONNECT_TIMEOUT=60
      - AGENT_ADMIN_URL=http://agency:3001
      - MEDIATOR_ADMIN_URL=http://mediator:3001
    depends_on:
      - agency
      - mediator
    networks:
      - acapy_default

networks:
  acapy_default:
    external: true
    name: ${NETWORK_NAME}
